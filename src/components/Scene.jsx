/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.13 scene.gltf --transform 
Files: scene.gltf [288.62KB] > scene-transformed.glb [3.76MB] (-1204%)
Author: WON (https://sketchfab.com/won1)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/fire-in-the-sky-06d903f5dc5245699adf38192f77fbb6
Title: ...Fire in the sky
*/

import React, { useRef, useLayoutEffect, useEffect } from 'react'
import { useGLTF, useAnimations, useScroll } from '@react-three/drei'
import gsap from 'gsap'
import { useFrame } from '@react-three/fiber'

export function Scene(props) {
  const group = useRef()
  const { nodes, materials, animations } = useGLTF('./models/sky/scene-transformed.glb')
  const { actions, ref, names } = useAnimations(animations, group)
  const scene = useRef()
  const scroll = useScroll()
  const tl = useRef()


  useEffect(() => {
    // console.log(names)

  }, [])


  useFrame((state, delta) => {
    tl.current.seek(scroll.offset * tl.current.duration())
  })

  useLayoutEffect(() => {
    // console.log(animations)
    tl.current = gsap.timeline({ defaults: { duration: 2, ease: 'power1.inOut' } })

    tl.current
      .to(scene.current.rotation, { y: -1 })
      .to(scene.current.rotation, { y: -4 })
      .to(scene.current.rotation, { y: -6.5 })



  }, [])

  return (
    <group ref={group, scene} {...props} dispose={null}>
      <mesh geometry={nodes.Object_4.geometry} material={materials.PaletteMaterial001} rotation={[Math.PI / 2, 0, 0]} />
      <mesh geometry={nodes.Object_171.geometry} material={materials.PaletteMaterial001} rotation={[Math.PI / 2, 0, 0]} />
      <mesh geometry={nodes.Object_172.geometry} material={materials.PaletteMaterial002} rotation={[Math.PI / 2, 0, 0]} />
      <mesh geometry={nodes.Object_176.geometry} material={materials.PaletteMaterial003} rotation={[Math.PI / 2, 0, 0]} />
      <mesh geometry={nodes.Object_177.geometry} material={materials.PaletteMaterial004} rotation={[Math.PI / 2, 0, 0]} />
      <mesh geometry={nodes.Object_178.geometry} material={materials.PaletteMaterial005} rotation={[Math.PI / 2, 0, 0]} />
    </group>
  )
}

useGLTF.preload('./models/sky/scene-transformed.glb')
